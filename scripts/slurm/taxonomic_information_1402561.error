Lmod has detected the following error: The following module(s) are unknown:
"Anaconda3/2024.06-1"

Please check the spelling or version number. Also try "module spider ..."
It is also possible your cache file is out-of-date; it may help to try:
  $ module --ignore_cache load "Anaconda3/2024.06-1"

Also make sure that all modulefiles written in TCL start with the string
#%Module




CondaError: Run 'conda init' before 'conda activate'

/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:277: DtypeWarning: Columns (1,11,12,15,18,19,35,37,38,39,40) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(args.data_path)
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
/home/chandru/binp37/scripts/metasub/data_preprocess/get_taxonomic_info.py:217: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  higher_rank_features[new_col_name] = aggregated_rsa
